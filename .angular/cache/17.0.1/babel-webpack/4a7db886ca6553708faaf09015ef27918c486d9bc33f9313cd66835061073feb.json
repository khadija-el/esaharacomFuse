{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DeleteService } from '../delete/delete.service';\nimport { environment } from 'app/environments/environment';\nexport class SuperService {\n  constructor(controller) {\n    this.controller = controller;\n    this.http = inject(HttpClient);\n    this.urlApi = environment.apiUrl;\n    this.snackBar = inject(MatSnackBar);\n    this.deleteDialog = inject(DeleteService);\n    this.get = () => this.http.get(`${this.urlApi}/${this.controller}/Get`);\n    this.count = () => this.http.get(`${this.urlApi}/${this.controller}/Count`);\n    // getById = (id:any) => this.http.get<T>(`${this.urlApi}/${this.controller}/getById/${id}`);\n    this.post = o => this.http.post(`${this.urlApi}/${this.controller}/Post`, o);\n    this.put = (id, o) => this.http.put(`${this.urlApi}/${this.controller}/Put/${id}`, o);\n    this.delete = id => this.http.delete(`${this.urlApi}/${this.controller}/Delete/${id}`);\n    this.getById = id => this.http.get(`${this.urlApi}/${this.controller}/GetById/${id}`);\n  }\n  snackAdd(message = 'Element successfully Added') {\n    const config = {\n      panelClass: ['green-snackbar'],\n      duration: 2000\n    };\n    this.snackBar.open(message, null, config);\n  }\n  snackUpdate(message = 'Element successfully Updated') {\n    const config = {\n      panelClass: ['green-snackbar'],\n      duration: 2000\n    };\n    this.snackBar.open(message, null, config);\n  }\n  snackDelete(message = 'Element successfully Deleted') {\n    const config = {\n      panelClass: ['green-snackbar'],\n      duration: 2000\n    };\n    this.snackBar.open(message, null, config);\n  }\n}","map":{"version":3,"names":["HttpClient","inject","MatSnackBar","DeleteService","environment","SuperService","constructor","controller","http","urlApi","apiUrl","snackBar","deleteDialog","get","count","post","o","put","id","delete","getById","snackAdd","message","config","panelClass","duration","open","snackUpdate","snackDelete"],"sources":["E:\\1.MesApplications\\Sahara\\GestionCommerciale\\4.Web_Saharacom\\fuseangular-1900\\fuse-angular-v19.0.0\\fuse-starter-v19.0.0\\src\\app\\modules\\dashboards\\Services\\super.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DeleteService } from '../delete/delete.service';\r\nimport { environment } from 'app/environments/environment';\r\n\r\n\r\nexport class SuperService<T> {\r\n  protected http = inject(HttpClient);\r\n  protected urlApi: string = environment.apiUrl;\r\n  snackBar = inject(MatSnackBar);\r\n  deleteDialog = inject(DeleteService);\r\n\r\n  constructor(public controller: string) { }\r\n\r\n  get = () => this.http.get<T[]>(`${this.urlApi}/${this.controller}/Get`);\r\n\r\n  count = () => this.http.get<number>(`${this.urlApi}/${this.controller}/Count`);\r\n\r\n  // getById = (id:any) => this.http.get<T>(`${this.urlApi}/${this.controller}/getById/${id}`);\r\n\r\n  post = (o: T) => this.http.post<T>(`${this.urlApi}/${this.controller}/Post`, o);\r\n\r\n  put = (id: number | string, o: T) => this.http.put<any>(`${this.urlApi}/${this.controller}/Put/${id}`, o);\r\n\r\n  delete = (id: any) => this.http.delete<any>(`${this.urlApi}/${this.controller}/Delete/${id}`);\r\n  getById = (id:any) => this.http.get<T>(`${this.urlApi}/${this.controller}/GetById/${id}`);\r\n\r\n\r\n\r\n  snackAdd(message = 'Element successfully Added') {\r\n    const config = {\r\n      panelClass: ['green-snackbar'],\r\n      duration: 2000\r\n    };\r\n\r\n    this.snackBar.open(message, null, config);\r\n  }\r\n\r\n  snackUpdate(message = 'Element successfully Updated') {\r\n    const config = {\r\n      panelClass: ['green-snackbar'],\r\n      duration: 2000\r\n    };\r\n\r\n    this.snackBar.open(message, null, config);\r\n  }\r\n\r\n  snackDelete(message = 'Element successfully Deleted') {\r\n    const config = {\r\n      panelClass: ['green-snackbar'],\r\n      duration: 2000\r\n    };\r\n\r\n    this.snackBar.open(message, null, config);\r\n  }\r\n\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,WAAW,QAAQ,8BAA8B;AAG1D,OAAM,MAAOC,YAAY;EAMvBC,YAAmBC,UAAkB;IAAlB,KAAAA,UAAU,GAAVA,UAAU;IALnB,KAAAC,IAAI,GAAGP,MAAM,CAACD,UAAU,CAAC;IACzB,KAAAS,MAAM,GAAWL,WAAW,CAACM,MAAM;IAC7C,KAAAC,QAAQ,GAAGV,MAAM,CAACC,WAAW,CAAC;IAC9B,KAAAU,YAAY,GAAGX,MAAM,CAACE,aAAa,CAAC;IAIpC,KAAAU,GAAG,GAAG,MAAM,IAAI,CAACL,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,MAAM,IAAI,IAAI,CAACF,UAAU,MAAM,CAAC;IAEvE,KAAAO,KAAK,GAAG,MAAM,IAAI,CAACN,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,MAAM,IAAI,IAAI,CAACF,UAAU,QAAQ,CAAC;IAE9E;IAEA,KAAAQ,IAAI,GAAIC,CAAI,IAAK,IAAI,CAACR,IAAI,CAACO,IAAI,CAAI,GAAG,IAAI,CAACN,MAAM,IAAI,IAAI,CAACF,UAAU,OAAO,EAAES,CAAC,CAAC;IAE/E,KAAAC,GAAG,GAAG,CAACC,EAAmB,EAAEF,CAAI,KAAK,IAAI,CAACR,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACR,MAAM,IAAI,IAAI,CAACF,UAAU,QAAQW,EAAE,EAAE,EAAEF,CAAC,CAAC;IAEzG,KAAAG,MAAM,GAAID,EAAO,IAAK,IAAI,CAACV,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACV,MAAM,IAAI,IAAI,CAACF,UAAU,WAAWW,EAAE,EAAE,CAAC;IAC7F,KAAAE,OAAO,GAAIF,EAAM,IAAK,IAAI,CAACV,IAAI,CAACK,GAAG,CAAI,GAAG,IAAI,CAACJ,MAAM,IAAI,IAAI,CAACF,UAAU,YAAYW,EAAE,EAAE,CAAC;EAbhD;EAiBzCG,QAAQA,CAACC,OAAO,GAAG,4BAA4B;IAC7C,MAAMC,MAAM,GAAG;MACbC,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9BC,QAAQ,EAAE;KACX;IAED,IAAI,CAACd,QAAQ,CAACe,IAAI,CAACJ,OAAO,EAAE,IAAI,EAAEC,MAAM,CAAC;EAC3C;EAEAI,WAAWA,CAACL,OAAO,GAAG,8BAA8B;IAClD,MAAMC,MAAM,GAAG;MACbC,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9BC,QAAQ,EAAE;KACX;IAED,IAAI,CAACd,QAAQ,CAACe,IAAI,CAACJ,OAAO,EAAE,IAAI,EAAEC,MAAM,CAAC;EAC3C;EAEAK,WAAWA,CAACN,OAAO,GAAG,8BAA8B;IAClD,MAAMC,MAAM,GAAG;MACbC,UAAU,EAAE,CAAC,gBAAgB,CAAC;MAC9BC,QAAQ,EAAE;KACX;IAED,IAAI,CAACd,QAAQ,CAACe,IAAI,CAACJ,OAAO,EAAE,IAAI,EAAEC,MAAM,CAAC;EAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}